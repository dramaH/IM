<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dcits.im.jpa.entity.ImRecSysMsg">
	<resultMap id="BaseResultMap" type="com.dcits.im.jpa.entity.ImRecSysMsg" >
				<result column="ID" property="id"  jdbcType="VARCHAR"/>
				<result column="SESSION_ID" property="sessionId"  jdbcType="VARCHAR"/>
				<result column="SYSTEM_IDS" property="systemIds"  jdbcType="VARCHAR"/>
				<result column="TO_USER_ID" property="toUserId"  jdbcType="VARCHAR"/>
				<result column="READ_TYPE" property="readType"  jdbcType="INTEGER"/>
				<result column="TITLE" property="title"  jdbcType="VARCHAR"/>
				<result column="CONTENT" property="content"  jdbcType="VARCHAR"/>
				<result column="FORMAT" property="format"  jdbcType="INTEGER"/>
				<result column="IS_READ" property="isRead"  jdbcType="INTEGER"/>
				<result column="CREATE_TIME" property="createTime"  jdbcType="DECIMAL"/>
				<result column="TIMESTAMP" property="timestamp"  jdbcType="DECIMAL"/>
				<result column="STATE" property="state"  jdbcType="INTEGER"/>
	</resultMap>

	<sql id="Table_Name">
		IM_REC_SYS_MSG
	</sql>

	<sql id="Base_Column">
				ID,
				SESSION_ID,
				SYSTEM_IDS,
				TO_USER_ID,
				READ_TYPE,
				TITLE,
				CONTENT,
				FORMAT,
				IS_READ,
				CREATE_TIME,
				TIMESTAMP,
				STATE
	</sql>

	<sql id="Base_Where">
		<trim suffixOverrides="AND">
			<if test="id != null and  id != '' ">
		       ID = #{id}  AND
			</if>
			<if test="sessionId != null and  sessionId != '' ">
		       SESSION_ID = #{sessionId}  AND
			</if>
			<if test="systemIds != null and  systemIds != '' ">
		       SYSTEM_IDS = #{systemIds}  AND
			</if>
			<if test="toUserId != null and  toUserId != '' ">
		       TO_USER_ID = #{toUserId}  AND
			</if>
			<if test="readType != null ">
		       READ_TYPE = #{readType}  AND
			</if>
			<if test="title != null and  title != '' ">
		       TITLE = #{title}  AND
			</if>
			<if test="content != null and  content != '' ">
		       CONTENT = #{content}  AND
			</if>
			<if test="format != null ">
		       FORMAT = #{format}  AND
			</if>
			<if test="isRead != null ">
		       IS_READ = #{isRead}  AND
			</if>
			<if test="timestamp != null ">
		       TIMESTAMP = #{timestamp}  AND
			</if>
			<if test="state != null ">
		       STATE = #{state}  AND
			</if>
		</trim>
	</sql>

	<sql id="comet_step_column">
		<if test="cometSqlType == 'segment'"> ${cometKeyField} as KEY_FIELD </if>
		<if test="cometSqlType == 'page'">  * </if>
	</sql>

	<sql id="comet_step_where">
		<if test="cometStart != null and cometStart.length() > 0 and cometEnd != null and cometEnd.length() > 0" > and ${cometKeyField} between #{cometStart} and #{cometEnd} </if>
	</sql>

	<sql id="comet_row_num_step_column">
		<if test="cometSqlType == 'total'"> count(*) </if>
		<if test="cometSqlType == 'offset'">  * </if>
	</sql>

	<sql id="Base_Select">
		SELECT
		<include refid="Base_Column" />
		FROM
		<include refid="Table_Name" />
		<where>
			<include refid="Base_Where" />
		</where>
	</sql>

	<insert id="insert" >
		insert into
		<include refid="Table_Name" />
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null and  id != '' ">
		        ID,
			</if>
			<if test="sessionId != null and  sessionId != '' ">
		        SESSION_ID,
			</if>
			<if test="systemIds != null and  systemIds != '' ">
		        SYSTEM_IDS,
			</if>
			<if test="toUserId != null and  toUserId != '' ">
		        TO_USER_ID,
			</if>
			<if test="readType != null ">
		        READ_TYPE,
			</if>
			<if test="title != null and  title != '' ">
		        TITLE,
			</if>
			<if test="content != null and  content != '' ">
		        CONTENT,
			</if>
			<if test="format != null ">
		        FORMAT,
			</if>
			<if test="isRead != null ">
		        IS_READ,
			</if>
			<if test="createTime != null ">
				CREATE_TIME,
			</if>
			<if test="timestamp != null ">
		        TIMESTAMP,
			</if>
			<if test="state != null ">
		        STATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null and  id != '' ">
				#{id},
			</if>
			<if test="sessionId != null and  sessionId != '' ">
				#{sessionId},
			</if>
			<if test="systemIds != null and  systemIds != '' ">
				#{systemIds},
			</if>
			<if test="toUserId != null and  toUserId != '' ">
				#{toUserId},
			</if>
			<if test="readType != null ">
				#{readType},
			</if>
			<if test="title != null and  title != '' ">
				#{title},
			</if>
			<if test="content != null and  content != '' ">
				#{content},
			</if>
			<if test="format != null ">
				#{format},
			</if>
			<if test="isRead != null ">
				#{isRead},
			</if>
			<if test="createTime != null ">
				#{createTime},
			</if>
			<if test="timestamp != null ">
				#{timestamp},
			</if>
			<if test="state != null ">
				#{state},
			</if>
		</trim>
	</insert>

	<update id="update"  >
		UPDATE <include refid="Table_Name" />
		<set>
			    <if test="sessionId != null and  sessionId != '' ">
					    SESSION_ID = #{sessionId},
				</if>
			    <if test="systemIds != null and  systemIds != '' ">
					    SYSTEM_IDS = #{systemIds},
				</if>
			    <if test="toUserId != null and  toUserId != '' ">
					    TO_USER_ID = #{toUserId},
				</if>
				<if test="readType != null ">
					    READ_TYPE = #{readType},
				</if>
			    <if test="title != null and  title != '' ">
					    TITLE = #{title},
				</if>
			    <if test="content != null and  content != '' ">
					    CONTENT = #{content},
				</if>
				<if test="format != null ">
					    FORMAT = #{format},
				</if>
				<if test="isRead != null ">
					    IS_READ = #{isRead},
				</if>
				<if test="timestamp != null ">
					    TIMESTAMP = #{timestamp},
				</if>
				<if test="state != null ">
					    STATE = #{state},
				</if>
		</set>
		<where>
			<trim suffixOverrides="AND">
				 <if test="id != null and  id != '' ">
					 ID = #{id}  AND
				 </if>
			</trim>
		</where>
	</update>

	<update id="updateByEntity" >
		UPDATE
		<include refid="Table_Name" />
		<set>
			  <if test="s.id != null and s.id != '' ">
			    ID = #{s.id},
			 </if>
			  <if test="s.sessionId != null and s.sessionId != '' ">
			    SESSION_ID = #{s.sessionId},
			 </if>
			  <if test="s.systemIds != null and s.systemIds != '' ">
			    SYSTEM_IDS = #{s.systemIds},
			 </if>
			  <if test="s.toUserId != null and s.toUserId != '' ">
			    TO_USER_ID = #{s.toUserId},
			 </if>
			  <if test="s.readType != null ">
			    READ_TYPE = #{s.readType},
			 </if>
			  <if test="s.title != null and s.title != '' ">
			    TITLE = #{s.title},
			 </if>
			  <if test="s.content != null and s.content != '' ">
			    CONTENT = #{s.content},
			 </if>
			  <if test="s.format != null ">
			    FORMAT = #{s.format},
			 </if>
			  <if test="s.isRead != null ">
			    IS_READ = #{s.isRead},
			 </if>
			  <if test="s.timestamp != null ">
			    TIMESTAMP = #{s.timestamp},
			 </if>
			  <if test="s.state != null ">
			    STATE = #{s.state},
			 </if>
		</set>
		<where>
			<trim prefix="(" suffix=")" suffixOverrides="AND">
				    <if test="w.id != null and w.id != '' ">
					ID = #{w.id}
					AND
				</if>
				    <if test="w.sessionId != null and w.sessionId != '' ">
					SESSION_ID = #{w.sessionId}
					AND
				</if>
				    <if test="w.systemIds != null and w.systemIds != '' ">
					SYSTEM_IDS = #{w.systemIds}
					AND
				</if>
				    <if test="w.toUserId != null and w.toUserId != '' ">
					TO_USER_ID = #{w.toUserId}
					AND
				</if>
					<if test="w.readType != null ">
					READ_TYPE = #{w.readType}
					AND
				</if>
				    <if test="w.title != null and w.title != '' ">
					TITLE = #{w.title}
					AND
				</if>
				    <if test="w.content != null and w.content != '' ">
					CONTENT = #{w.content}
					AND
				</if>
					<if test="w.format != null ">
					FORMAT = #{w.format}
					AND
				</if>
					<if test="w.isRead != null ">
					IS_READ = #{w.isRead}
					AND
				</if>
					<if test="w.timestamp != null ">
					TIMESTAMP = #{w.timestamp}
					AND
				</if>
					<if test="w.state != null ">
					STATE = #{w.state}
					AND
				</if>
			</trim>
		</where>
	</update>
	<delete id="delete" >
		DELETE FROM
		<include refid="Table_Name" />
		<where>
			<include refid="Base_Where" />
		</where>
	</delete>

	<select id="count" parameterType="java.util.Map" resultType="int">
		select count(1) from
		<include refid="Table_Name" />
		<where>
			<include refid="Base_Where" />
		</where>
	</select>

	<select id="selectOne"  resultMap="BaseResultMap">
		<include refid="Base_Select" />
	</select>

	<select id="selectList"  resultMap="BaseResultMap">
		<include refid="Base_Select" />
	</select>

	<select id="selectForUpdate" resultMap="BaseResultMap" useCache="false">
		<include refid="Base_Select" />
		for update
	</select>


	<!--根据主键查询-->
	<select id="selectByPrimaryKey"  resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column" />
		FROM
		<include refid="Table_Name" />
		<where>
			<trim suffixOverrides="AND">
		      <if test="id != null and  id != '' ">
				 ID = #{id}  AND
			  </if>
			</trim>
		</where>
	</select>

    <!--根据主键删除-->
	<delete id="deleteByPrimaryKey">
		DELETE FROM <include refid="Table_Name" />
		<where>
			<trim suffixOverrides="AND">
	        	<if test="id != null and  id != '' ">
				  ID = #{id}  AND
				</if>
			</trim>
		</where>
	</delete>
</mapper>